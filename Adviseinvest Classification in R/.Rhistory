knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rpart)
# You must run this code to format the dataset properly!
advise_invest <- read_csv("adviseinvest.csv")  %>%            # Download data
select(-product) %>%                                        # Remove the product column
na.omit %>%                                                 # Remove NAs
filter(income > 0,                                          # Filter out mistaken data
num_accts < 5) %>%
mutate(answered = factor(ifelse(answered==0, "no","yes"),   # Turn answered into yes/no factor
levels  = c("no", "yes")),
female = factor(female),                             # Make categorical variables into factors
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile),
chk_acct = factor(chk_acct),
sav_acct = factor(sav_acct))
prospective <- read_csv("customer_data.csv") %>%
mutate(female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile),
chk_acct = factor(chk_acct),
sav_acct = factor(sav_acct))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rpart)
# You must run this code to format the dataset properly!
advise_invest <- read_csv("adviseinvest.csv")  %>%            # Download data
select(-product) %>%                                        # Remove the product column
na.omit %>%                                                 # Remove NAs
filter(income > 0,                                          # Filter out mistaken data
num_accts < 5) %>%
mutate(answered = factor(ifelse(answered==0, "no","yes"),   # Turn answered into yes/no factor
levels  = c("no", "yes")),
female = factor(female),                             # Make categorical variables into factors
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile),
chk_acct = factor(chk_acct),
sav_acct = factor(sav_acct))
prospective <- read_csv("customer_data.csv") %>%
mutate(female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile),
chk_acct = factor(chk_acct),
sav_acct = factor(sav_acct))
prospective
(tree_model <- rpart(formula = answered ~ .,
data = advise_invest))
confusion_matrix_class <- table(predicted = predict(tree_model, type = "class"),
observed = advise_invest$answered)
confusion_matrix_class
(cost_benefit <-  matrix(c(75, 0, -25, 0), ncol = 2,
dimnames = list(c("predicted yes", "no"),
c("observed yes","no"))))
a <- 13820 *75
a
b <- 3006 * -25
b
a + b
yes <- 2304 + 13820
no <- 10367 + 3008
yes_cost <- yes * 75
no_cost <- no * -25
yes_cost + no_cost
table(predicted = ifelse(predict(tree_model, type = "prob")[,2] > .3, "YES", "NO"),
observed = advise_invest$answered)
yes <- 14268 * 75
no <- 3776 * 25
yes - no
(answer_model <- rpart(answered ~., data = advise_invest))
glimpse(prospective)
predict(answer_model,
newdata = prospective,
type = "prob") %>%
head
predictions <- prospective %>%
select(customer_id) %>%
mutate(answer_prob = predict(answer_model,
newdata = prospective,
type = "prob")[,2])
predictions
contact_list <- predictions %>%
filter(answer_prob >= .3) %>%
arrange(desc(answer_prob))
glimpse(contact_list)
